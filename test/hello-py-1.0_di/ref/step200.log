 $ cd vcsdir
 $ git init
Initialized empty Git repository in /path/to/vcsdir/.git/
 $ git add .
 $ git commit -m "initial commit"
[master (root-commit) ffc50b7] initial commit
 6 files changed, 93 insertions(+)
 create mode 100644 MANIFEST
 create mode 100644 MANIFEST.in
 create mode 100644 PKG-INFO
 create mode 100755 hello-py/__init__.py
 create mode 100755 scripts/hello
 create mode 100755 setup.py
 $ git branch devel
 $ git branch upstream
 $ git branch
  devel
* master
  upstream
 $ debmake -s -b':python3' -d -i debuild
D: /usr/bin/debmake started
D: PYTHONPATH = /usr/bin:/usr/lib/python3.4:/usr/lib/python3.4/plat-x86_64-...
I: set parameters
I: sanity check of parameters
I: pkg="", ver="", rev="1"
I: make the upstream tarball with "make dist" equivalents
I: pwd = "/path/to/vcsdir"
I: $ python3 setup.py sdist
running sdist
running check
warning: sdist: standard file not found: should have one of README, README....

reading manifest template 'MANIFEST.in'
writing manifest file 'MANIFEST'
creating hello-py-1.0
creating hello-py-1.0/hello-py
creating hello-py-1.0/scripts
making hard links in hello-py-1.0...
hard linking MANIFEST -> hello-py-1.0
hard linking MANIFEST.in -> hello-py-1.0
hard linking setup.py -> hello-py-1.0
hard linking hello-py/__init__.py -> hello-py-1.0/hello-py
hard linking scripts/hello -> hello-py-1.0/scripts
creating dist
Creating tar archive
removing 'hello-py-1.0' (and everything under it)
I: -> dist/hello-py-1.0.tar.gz created
I: hello-py-1.0.tar.gz picked for packaging
I: pwd = "/path/to"
I: $ cp -f vcsdir/dist/hello-py-1.0.tar.gz hello-py-1.0.tar.gz
I: pkg="hello-py", ver="1.0", rev="1"
I: untar the upstream tarball
I: pwd = "/path/to"
I: $ tar -xvzf hello-py-1.0.tar.gz
hello-py-1.0/
hello-py-1.0/hello-py/
hello-py-1.0/hello-py/__init__.py
hello-py-1.0/scripts/
hello-py-1.0/scripts/hello
hello-py-1.0/MANIFEST.in
hello-py-1.0/PKG-INFO
hello-py-1.0/setup.py
hello-py-1.0/MANIFEST
I: untared hello-py-1.0.tar.gz.
I: tar -tzf hello-py-1.0.tar.gz|grep -v /.
I: pwd = "/path/to/hello-py-1.0"
I: *** start packaging in "hello-py-1.0". ***
I: provide hello-py_1.0.orig.tar.gz for non-native Debian package
I: pwd = "/path/to"
I: $ ln -sf hello-py-1.0.tar.gz hello-py_1.0.orig.tar.gz
I: pwd = "/path/to/hello-py-1.0"
I: parse binary package settings: :python3
I: binary package=hello-py Type=python3 / Arch=all M-A=foreign
I: analyze the source tree
I: build_type = Python3 distutils
I: scan source for copyright+license text and file extensions
I:  67 %, ext = python
I:  33 %, ext = in
I: check_all_licenses
I: ......
I: check_all_licenses completed for 6 files.
I: bunch_all_licenses
I: format_all_licenses
I: make debian/* template files
I: single binary package
I: debmake -x "1" ...
I: creating => debian/control
I: creating => debian/copyright
I: creating => debian/changelog
I: creating => debian/rules
I: creating => debian/compat
I: creating => debian/watch
I: creating => debian/README.Debian
I: creating => debian/source/format
I: creating => debian/source/local-options
I: creating => debian/patches/series
I: run "debmake -x2" to get more template files
I: $ wrap-and-sort
I: debuild
 dpkg-buildpackage -rfakeroot -D -us -uc -I -i
dpkg-buildpackage: source package hello-py
dpkg-buildpackage: source version 1.0-1
dpkg-buildpackage: source distribution UNRELEASED
dpkg-buildpackage: source changed by "Firstname Lastname" <email.address@ex...
 dpkg-source -I -i --before-build hello-py-1.0
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh clean --with "python3"
   dh_testdir
   debian/rules override_dh_auto_clean
make[1]: Entering directory '/path/to/hello-py-1.0'
rm -rf build
make[1]: Leaving directory '/path/to/hello-py-1.0'
   dh_clean
 dpkg-source -I -i -b hello-py-1.0
dpkg-source: info: using source format `3.0 (quilt)'
dpkg-source: info: building hello-py using existing ./hello-py_1.0.orig.tar...
dpkg-source: info: building hello-py in hello-py_1.0-1.debian.tar.xz
dpkg-source: info: building hello-py in hello-py_1.0-1.dsc
 debian/rules build
dh build --with "python3"
   dh_testdir
   dh_auto_configure
   debian/rules override_dh_auto_build
make[1]: Entering directory '/path/to/hello-py-1.0'
set -ex; for python in  python3; do \
    $python setup.py build; \
done
+ python3 setup.py build
running build
running build_py
creating build
creating build/lib
creating build/lib/hello-py
copying hello-py/__init__.py -> build/lib/hello-py
running build_scripts
creating build/scripts-3.4
copying and adjusting scripts/hello -> build/scripts-3.4
changing mode of build/scripts-3.4/hello from 644 to 755
make[1]: Leaving directory '/path/to/hello-py-1.0'
   dh_auto_test
 fakeroot debian/rules binary
dh binary --with "python3"
   dh_testroot
   dh_prep
   debian/rules override_dh_auto_install
make[1]: Entering directory '/path/to/hello-py-1.0'
set -ex; for python in  python3; do \
    $python setup.py install \
        --root=debian/hello-py\
        --force\
        --install-layout=deb; \
done
+ python3 setup.py install --root=debian/hello-py --force --install-layout=...
running install
running build
running build_py
running build_scripts
running install_lib
creating debian/hello-py
creating debian/hello-py/usr
creating debian/hello-py/usr/lib
creating debian/hello-py/usr/lib/python3
creating debian/hello-py/usr/lib/python3/dist-packages
creating debian/hello-py/usr/lib/python3/dist-packages/hello-py
copying build/lib/hello-py/__init__.py -> debian/hello-py/usr/lib/python3/d...
byte-compiling debian/hello-py/usr/lib/python3/dist-packages/hello-py/__ini...
running install_scripts
creating debian/hello-py/usr/bin
copying build/scripts-3.4/hello -> debian/hello-py/usr/bin
changing mode of debian/hello-py/usr/bin/hello to 755
running install_egg_info
Writing debian/hello-py/usr/lib/python3/dist-packages/hello_py-1.0.egg-info...
make[1]: Leaving directory '/path/to/hello-py-1.0'
   dh_installdocs
   dh_installchangelogs
   dh_python3
   dh_perl
   dh_link
   dh_compress
   dh_fixperms
   dh_installdeb
   dh_gencontrol
   dh_md5sums
   dh_builddeb
dpkg-deb: building package `hello-py' in `../hello-py_1.0-1_all.deb'.
 dpkg-genchanges  >../hello-py_1.0-1_amd64.changes
dpkg-genchanges: including full source code in upload
 dpkg-source -I -i --after-build hello-py-1.0
dpkg-buildpackage: full upload (original source is included)
Now running lintian...
E: hello-py source: python3-depends-but-no-python3-helper hello-py
N:
N:    The source package declares a dependency on ${python3:Depends} in the...
N:    given binary package's debian/control entry. However, debian/rules
N:    doesn't call any helper that would generate this substitution variabl...
N:
N:    Severity: serious, Certainty: possible
N:
N:    Check: debhelper, Type: source
N:
W: hello-py source: superfluous-clutter-in-homepage <insert the upstream UR...
N:
N:    The "Homepage:" field in this package's control file contains
N:    superfluous markup around the URL, like enclosing < and >. This is
N:    unnecessary and needlessly complicates using this information.
N:
N:    Refer to Debian Policy Manual section 5.6.23 (Homepage) for details.
N:
N:    Severity: normal, Certainty: certain
N:
N:    Check: fields, Type: binary, udeb, source
N:
W: hello-py source: bad-homepage <insert the upstream URL, if relevant>
N:
N:    The "Homepage:" field in this package's control file does not contain...
N:    valid absolute URL. Most probably you forgot to specify the scheme (e...
N:    http).
N:
N:    This tag is also triggered if the scheme is not known by Lintian.
N:
N:    Please file a bug against Lintian, if this tag is triggered for a val...
N:    homepage URL.
N:
N:    Severity: normal, Certainty: certain
N:
N:    Check: fields, Type: binary, udeb, source
N:
W: hello-py source: missing-license-paragraph-in-dep5-copyright __unknown__...
N:
N:    The files paragraph in the machine readable copyright file references...
N:    license, for which no standalone license paragraph exists.
N:
N:    Refer to
N:    http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/ for...
N:    details.
N:
N:    Severity: normal, Certainty: possible
N:
N:    Check: source-copyright, Type: source
N:
W: hello-py: wrong-bug-number-in-closes l3:#nnnn
N:
N:    Bug numbers can only contain digits.
N:
N:    Refer to Debian Policy Manual section 4.4 (Debian changelog:
N:    debian/changelog) for details.
N:
N:    Severity: normal, Certainty: certain
N:
N:    Check: changelog-file, Type: binary
N:
W: hello-py: new-package-should-close-itp-bug
N:
N:    This package appears to be the first packaging of a new upstream
N:    software package (there is only one changelog entry and the Debian
N:    revision is 1), but it does not close any bugs. The initial upload of...
N:    new package should close the corresponding ITP bug for that package.
N:
N:    This warning can be ignored if the package is not intended for Debian...
N:    if it is a split of an existing Debian package.
N:
N:    Refer to Debian Developer's Reference section 5.1 (New packages) for
N:    details.
N:
N:    Severity: normal, Certainty: certain
N:
N:    Check: changelog-file, Type: binary
N:
E: hello-py: changelog-is-dh_make-template
N:
N:    The changelog file has an instruction left by dh_make, which has not
N:    been removed. Example:
N:
N:      * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ...
N:
N:    The "<... is the bug number ...>" part has not been removed from the
N:    changelog.
N:
N:    Severity: important, Certainty: certain
N:
N:    Check: changelog-file, Type: binary
N:
W: hello-py: copyright-has-url-from-dh_make-boilerplate
N:
N:    There is "url://example.com" in your copyright file. This was most
N:    likely a remnant from the dh_make template.
N:
N:    Make sure you include the real location where you obtained the upstre...
N:    sources (if any).
N:
N:    Refer to Debian Policy Manual section 12.5 (Copyright information) fo...
N:    details.
N:
N:    Severity: normal, Certainty: certain
N:
N:    Check: copyright-file, Type: binary
N:
I: hello-py: extended-description-is-probably-too-short
N:
N:    The extended description (the lines after the first line of the
N:    "Description:" field) is only one or two lines long. The extended
N:    description should provide a user with enough information to decide
N:    whether they want to install this package, what it contains, and how ...
N:    compares to similar packages. One or two lines is normally not enough...
N:    do this.
N:
N:    Refer to Debian Developer's Reference section 6.2.1 (General guidelin...
N:    for package descriptions) and Debian Developer's Reference section 6....
N:    (The long description) for details.
N:
N:    Severity: minor, Certainty: possible
N:
N:    Check: description, Type: binary, udeb
N:
E: hello-py: section-is-dh_make-template
N:
N:    The "Section:" field in this package's control file is set to unknown...
N:    This is not a valid section, and usually means a dh_make template
N:    control file was used and never modified to set the correct section.
N:
N:    Refer to Debian Policy Manual section 2.4 (Sections) for details.
N:
N:    Severity: serious, Certainty: certain
N:
N:    Check: fields, Type: binary, udeb, source
N:
W: hello-py: superfluous-clutter-in-homepage <insert the upstream URL, if r...
W: hello-py: bad-homepage <insert the upstream URL, if relevant>
W: hello-py: binary-without-manpage usr/bin/hello
N:
N:    Each binary in /usr/bin, /usr/sbin, /bin, /sbin or /usr/games should
N:    have a manual page
N:
N:    Note that though the man program has the capability to check for seve...
N:    program names in the NAMES section, each of these programs should hav...
N:    its own manual page (a symbolic link to the appropriate manual page i...
N:    sufficient) because other manual page viewers such as xman or tkman
N:    don't support this.
N:
N:    If the name of the man page differs from the binary by case, man may ...
N:    able to find it anyway; however, it is still best practice to make th...
N:    case of the man page match the case of the binary.
N:
N:    If the man pages are provided by another package on which this packag...
N:    depends, lintian may not be able to determine that man pages are
N:    available. In this case, after confirming that all binaries do have m...
N:    pages after this package and its dependencies are installed, please a...
N:    a lintian override.
N:
N:    Refer to Debian Policy Manual section 12.1 (Manual pages) for details...
N:
N:    Severity: normal, Certainty: possible
N:
N:    Check: manpages, Type: binary
N:
Finished running lintian.
I: upon return to the shell, current directory becomes /path/to/vcsdir
I: please execute "cd .." and inspect the build results.
 $ git clean -d -f
Removing dist/
