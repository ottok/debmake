[[custom]]
=== Package customization

Some upstream sources do not behave well and you may need to add customization to the build system of those upstream sources.

The package should be customized by the least invasive way to address the root cause of the Debian packaging problem.  Your packaging shall be more robust for the future upgrades in this way.  (You should also solve the root cause of the problem and send its patch to the upstream.)

Here, there are a few technical approaches to customize the build system:

* *patches/** approach
* *debian/rules* approach
* *debian/*'bianrypackage'.* approach

[[patchaproach]]
==== *patches/** approach

Modifications to the upstream source before building it can be done by placing the collection of the *-p1* patches in the *patches/* directory and applying them in sequence defined in the  *patches/series* file.

There are several methods to prepare *-p1* patches for this.

* The *diff* command
* The *dquilt* command (alias of the *quilt* command, see <<quilt>>)
* The *git* command with the *--format-patches* option
* The *gbp-pq* command
* The *git-dpm* command
* Patches used in other distros and floating on the mailing list
* ...

Wherever these patches come from, it is good idea to tag them with http://dep.debian.net/deps/dep3/[DEP-3] compatible header and normalizing them by the *dquilt* command (see <<quilt>>).  This is also needed for upgrading to the newer upstream source or importing the externally generated security patch.

----
 $ while dquilt push; do dquilt refresh ; done
 $ dquilt pop -a
----

See  <<modpkg>> for example.

[[rulesapproach]]
==== *debian/rules* approach

The customization to the Debian package build system can be done through the *debian/rules* file.

See <<customrules>>.

[[configapproach]]
==== *debian/*'binarypackage'.* approach

Add customized configuration files for the *dh_** command from the *debhelper* package in the *debian/* directory.

See <<debianconf>>.


